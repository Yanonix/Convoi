#    sim
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, Anthony Buisset (v0.1)
#    license type: free of charge license for academic and research purpose
#    see license.txt
### MODULE RECEPTION ##########################################################


### VARIABLES DU MODULE #######################################################

# dernier message recu
set SIM_rcv_msg $APG_msg_unknown

# application emettrice du dernier message (en cas d'option --whatwho)
set SIM_rcv_app $APG_msg_unknown

set SIM_rcv_nseq $APG_msg_unknown
###############################################################################


### ZONE DU MODULE ############################################################
## zone du module reception
labelframe .rcv -pady 2 -padx 2 -text "Réception \[$APP, ident = $APG_ident\]"  -fg $APG_int_coltitle

label .rcv.t1 -text "Dernier message de "
label .rcv.app -textvariable SIM_rcv_app -width 4 -fg $APG_int_colmsgrcv
label .rcv.t2 -text " : "
label .rcv.msg -textvariable SIM_rcv_msg -width 64  -fg $APG_int_colmsgrcv -anchor w
label .rcv.t3 -text " nseq = "
label .rcv.nseq -textvariable SIM_rcv_nseq -width 6  -fg $APG_int_colmsgrcv -anchor e
pack .rcv.t1 .rcv.app .rcv.t2 .rcv.msg .rcv.t3 .rcv.nseq -side left -fill y -pady 2
###############################################################################



### PROCEDURES DU MODULE ######################################################

#-- Procedure APG_receive_whatwho --------------------------------------------#
# Action : gere la reception de messages                                      #
# Remarq : surcharge de LIBAPGTK                                              #
# Entree : payload et emetteur                                                #
# Retour : rien                                                               #
#-----------------------------------------------------------------------------#
proc APG_receive_whatwho { what who } {
    # Recuperation du payload et mise a jour affichage
    set ::SIM_rcv_msg  [APG_msg_splitstr what $::SIM_snd_mnemopayload]
    set ::SIM_rcv_nseq  [APG_msg_splitstr what $::SIM_snd_mnemonseq]
    set ::SIM_rcv_app $who

    set typeMsg  [APG_msg_splitstr what $::CMN_mnemotypemsg]

    APG_vrb_dispdebug "what = $what, who=$::SIM_rcv_app, payload=$::SIM_rcv_msg" "APG_receive_what"


	switch -- $typeMsg \
		"Test" {
		
		}\
		$::SIM_mnemo_init{
			init
		}\
		$::SIM_mnemo_create{
			set name [APG_msg_splitstr what $::SIM_mnemo_car_ident]
			set color  [APG_msg_splitstr what $::SIM_mnemo_car_convoi_ident]
			set posX  [APG_msg_splitstr what $::SIM_mnemo_car_posX]
			set line  [APG_msg_splitstr what $::Sim_mnemo_car_line]
			
			car::create $name $color $posX $line
		}\
		$::SIM_mnemo_set_pos_in_road{
			set name [APG_msg_splitstr what $::SIM_mnemo_car_ident]
			set posX  [APG_msg_splitstr what $::SIM_mnemo_car_posX]
			set line  [APG_msg_splitstr what $::Sim_mnemo_car_line]

			car::setPosInRoad $::canvasGlobal $name $posX $line
		
		}\
		$SIM_set_Convoi {
			set name [APG_msg_splitstr what $::SIM_mnemo_car_ident]
			set color [APG_msg_splitstr what $::SIM_mnemo_car_convoi_ident]

			car::set_color $name $color
		}
		default {

		APG_vrb_dispwarning "$who>CON | No action for $typeMsg" "APG_receive_whatwho"

	}
}

