#    con
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, Anthony Buisset (v0.1)
#    license type: free of charge license for academic and research purpose
#    see license.txt
### MODULE EMISSION ###########################################################

### VARIABLES DU MODULE #######################################################

# Message par defaut pour l'emission
set CON_snd_msg $CON_rc_msgdefault

# Application par defaut vers qui sera emis le message
set CON_snd_app $CON_rc_appdefault

# Delai par defaut entre deux messages.
# NB : peut etre modifie par option --delay=
set CON_snd_delay $CON_rc_delaydefault

# Mnemonique pour retrouver le payload dans les messages
set CON_snd_mnemopayload $CON_rc_mnemopayload

# Mnemonique pour retrouver le numero de sequence dans les messages
set CON_snd_mnemonseq $CON_rc_mnemonseq

# Demande de depart automatique des emissions periodiques
# NB : peut etre change par l'option --autosend
set CON_snd_autosend false

# Etat d'emission periodique en cours ou non.
set CON_snd_sending false

# Numero du message emis
set CON_snd_nseq 0


###############################################################################

### ZONE DU MODULE ############################################################
labelframe .snd -pady 2 -padx 2 -text "Emission \[$APP, ident = $APG_ident\]" -fg $APG_int_coltitle

button .snd.btauto -text "Auto" \
		-activebackground $APG_int_colbutton \
		-foreground $APG_int_colbutton \
		-font $APG_int_fnbutton \
		-width 10 \
		-state disable \
		-command CON_snd_btauto


labelframe .snd.app -text "app"
entry .snd.app.v -width 4 -textvariable CON_snd_app

labelframe .snd.del -text "d√©lai (ms)"
set value $CON_snd_delay
spinbox .snd.del.v -width 6 -textvariable CON_snd_delay -from 100 -to 10000 -increment 100 -justify right
.snd.del.v set $value

labelframe .snd.msg -text "message"
entry .snd.msg.v -width 64 -textvariable CON_snd_msg

labelframe .snd.nseq -text "nseq"
label .snd.nseq.v -width 6 -textvariable CON_snd_nseq -anchor e

# affichage des sous-zones de la zone snd
pack .snd.btauto .snd.del .snd.app .snd.msg .snd.app .snd.nseq -side left -fill y -pady 2
pack .snd.msg.v .snd.app.v .snd.del.v .snd.nseq.v
###############################################################################


### OPTIONS DE LA LIGNE DE COMMANDE ###########################################
foreach option $APG_lstargs {
    set name [lindex [split $option "="] 0]
    set value [lindex [split $option "="] 1]
    
    switch -- $name {
				--dest {
						# application destinataire ----------------------------------------#
						if { $value == "" } {
								APG_vrb_dispwarning "option $name trouvee sans argument, utilisation de la valeur par defaut : $CON_snd_app"
						} else {
								set CON_snd_app $value
								APG_vrb_dispnotif "option $option trouvee, nouvelle application : $CON_snd_app"
						}
				}
				
				--delay {
						# periode d'emission ----------------------------------------------#
						if { $value == "" } {
								APG_vrb_dispwarning "option $name trouvee sans argument, utilisation de la valeur par defaut : $CON_snd_delay"
						} else {
								set CON_snd_delay $value
								APG_vrb_dispnotif "option $option trouvee, nouvelle periode : $CON_snd_delay"
						}
				}

				--autosend {
						# emission automatique --------------------------------------------#
						set CON_snd_autosend true
						APG_vrb_dispnotif "option $option trouvee, mode emission automatique active"
				}
    }
}
###############################################################################

### PROCEDURE DE L'INTERFACE ##################################################
proc CON_snd_btauto { } {

		if { $::CON_snd_sending == false } {
				.snd.btauto configure -text "Stop"
				set ::CON_snd_sending true
				CON_snd_autosend
		} else {
				after cancel CON_snd_autosend
				set ::CON_snd_sending false
				.snd.btauto configure -text "Auto"
		}
}
###############################################################################

### PROCEDURES DU MODULE ######################################################

#-- Procedure CON_snd_send ---------------------------------------------------#
# Action : envoie periodiquement le message sur le reseau                     #
# Entree : rien                                                               #
# Retour : rien                                                               #
#-----------------------------------------------------------------------------#
proc CON_snd_autosend { } {
    
		# Incrementation du numero de message
		incr ::CON_snd_nseq

    # Creation du message formate
    set msg [APG_msg_createmsg $::CON_snd_mnemopayload $::CON_snd_msg]

		# Ajout du numero de sequence
		APG_msg_addmsg msg $::CON_snd_mnemonseq $::CON_snd_nseq

    #APG_send_whatwho $msg $::CON_snd_app
    #CON_snd_multicast $::CMN_aval 2 "Send" $msg
    CON_snd_convoi 2 2 "Test" $msg
		
		after $::CON_snd_delay CON_snd_autosend
}


###############################################
# Public methodes
###############################################

proc CON_snd_unicast { sens sauts typeMsg {donnees ""} } {
	CON_snd_intraconvoi $::CMN_mnemotypecom_unicast $sens $sauts $typeMsg $donnees
}

proc CON_snd_multicast { sens sauts typeMsg {donnees ""} } {
	CON_snd_intraconvoi $::CMN_mnemotypecom_multicast $sens $sauts $typeMsg $donnees
}

proc CON_snd_convoi { adresseConvoi adresseVoiture typeMsg {donnees ""} } {
	# Creation du message
	# TypeCom
	set msg [APG_msg_createmsg $::CMN_mnemotypecom $::CMN_mnemotypecom_convoi]

	# Adresse convoi destinaire
	APG_msg_addmsg msg $::CMN_mnemoadresseconvoidestinaire $adresseConvoi

	# Adresse vehicule destinaire
	APG_msg_addmsg msg $::CMN_mnemoadressevehiculedestinaire $adresseVoiture

	# TypeMsg
	APG_msg_addmsg msg $::CMN_mnemotypemsg $typeMsg

	# Donnees
	set msg [APG_msg_concatemsg $msg $donnees]

	# Envoi
	APG_send_whatwho $msg "RTE"
}


###############################################
# Private methodes
###############################################

proc CON_snd_intraconvoi { type sens sauts typeMsg {donnees ""} } {
	# Creation du message
	# TypeCom
	set msg [APG_msg_createmsg $::CMN_mnemotypecom $type]

	# Sens
	APG_msg_addmsg msg $::CMN_mnemosens $sens

	# Sauts
	APG_msg_addmsg msg $::CMN_mnemosauts $sauts

	# TypeMsg
	APG_msg_addmsg msg $::CMN_mnemotypemsg $typeMsg

	# Donnees
	set msg [APG_msg_concatemsg $msg $donnees]

	# Envoi
	APG_send_whatwho $msg "RTE"
}
