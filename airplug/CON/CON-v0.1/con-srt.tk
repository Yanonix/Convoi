#    Con-ExitCon
#    an airplug compatible program
#    author: Jonathan Diguet (with Yann DRONIOU et Marc-Antoine MARTIN) UTC
#    license type: free of charge license for academic and research purpose
#    see license.txt
### MODULE HORLOGE ##########################################################

### VARIABLES DU MODULE #######################################################

###############################################################################

### ZONE DU MODULE ############################################################
if { $APG_ident != 1 } {

	button .ope.btsrt -text "Sortie de convoi" \
			-activebackground $APG_int_colbutton \
			-foreground $APG_int_colbutton \
			-font $APG_int_fnbutton \
			-command CON_srt_demande_interne

	pack .ope.btsrt -side left -fill y -pady 2

}
###############################################################################

### PROCEDURES OF THE MODULE ##################################################

#-- Procedure CON_Sortie_Demande_Reception ---------------------------------------------#
# Action : Réception d'une demande de sortie du véhicule du convoi                                 #
# Input  : adresseConvoiEmetteur,adresseVehiculeEmetteur,GPSPos,Sens                                                            #
# Output : nothing                                                              #
#-----------------------------------------------------------------------------#
proc CON_srt_demande_reception { } {
	
	CON_srt_demande_interne		

}
###############################################################################
	
#-- Procedure CON_Sortie_Demande_Interne -------------------------------------------------#
# Action : Le vehicule souhaite sortir du convoi                          #
# Input  : nothing                                                     #
# Output : nothing                                                            #
#-----------------------------------------------------------------------------#
proc CON_srt_demande_interne { } {

#	Envoyer_unicast(#AVAL#, 1, Séparation_convoi)
#	Envoyer_unicast(#AMONT#, 1, Séparation_convoi)		
	CON_snd_unicast $::CMN_aval 1 $::CON_mnemo_separation_convoi
	
	CON_spt_separation

	CON_cmn_declaration_leader

	CON_cmn_change_line 1
					
}

###############################################################################

