#    con
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, Anthony Buisset (v0.1)
#    license type: free of charge license for academic and research purpose
#    see license.txt
### MODULE RECEPTION ##########################################################


### VARIABLES DU MODULE #######################################################

# dernier message recu
set CON_rcv_msg $APG_msg_unknown

# application emettrice du dernier message (en cas d'option --whatwho)
set CON_rcv_app $APG_msg_unknown

set CON_rcv_nseq $APG_msg_unknown
###############################################################################


### ZONE DU MODULE ############################################################
## zone du module reception
labelframe .rcv -pady 2 -padx 2 -text "Réception \[$APP, ident = $APG_ident\]"  -fg $APG_int_coltitle

label .rcv.t1 -text "Dernier message de "
label .rcv.app -textvariable CON_rcv_app -width 4 -fg $APG_int_colmsgrcv
label .rcv.t2 -text " : "
label .rcv.msg -textvariable CON_rcv_msg -width 64  -fg $APG_int_colmsgrcv -anchor w
label .rcv.t3 -text " nseq = "
label .rcv.nseq -textvariable CON_rcv_nseq -width 6  -fg $APG_int_colmsgrcv -anchor e
pack .rcv.t1 .rcv.app .rcv.t2 .rcv.msg .rcv.t3 .rcv.nseq -side left -fill y -pady 2
###############################################################################



### PROCEDURES DU MODULE ######################################################

#-- Procedure APG_receive_whatwho --------------------------------------------#
# Action : gere la reception de messages                                      #
# Remarq : surcharge de LIBAPGTK                                              #
# Entree : payload et emetteur                                                #
# Retour : rien                                                               #
#-----------------------------------------------------------------------------#
proc APG_receive_whatwho { what who } {
    # Recuperation du payload et mise a jour affichage
    set ::CON_rcv_msg  [APG_msg_splitstr what $::CON_snd_mnemopayload]
    set ::CON_rcv_app $who

    set typeMsg  [APG_msg_splitstr what $::CMN_mnemotypemsg]

	APG_vrb_dispnotif "$who>CON | typeMsg = $typeMsg" "APG_receive_whatwho" 2

	switch -- $typeMsg \
				"Test" {

					# Appel de la fonction
					set ::CON_rcv_nseq  [APG_msg_splitstr what $::CON_snd_mnemonseq]
					#Appel de la fonction Entrée convoi
					
				} \
				$::CMN_mnemotypemsg_detection_convoi {

					#Détection d'un nouveau convoi
					set adresseConvoi [APG_msg_splitstr what $::CMN_mnemoadresseconvoidetectee] 
					set adresseVoiture [APG_msg_splitstr what $::CMN_mnemoadressevehiculedetectee]
					
					#On appelle la procédure de d'assemblage de convoi
					CON_asm_detection_convoi $adresseConvoi $adresseVoiture

				} \
				$::CON_mnemo_demande_assemblage {

					#Réception d'une demande d'assemblae
					set nbVehiculesConcoi [APG_msg_splitstr what $::CON_mnemo_nb_vehicules_convoi]
					set gps [APG_msg_splitstr what $::CMN_mnemogps]
					set adresseConvoiEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseconvoiemetteur]
					set adresseVehiculeEmetteur [APG_msg_splitstr what $::CMN_mnemoadressevehiculeemetteur]
					
					CON_asm_reception_demande_assemblage $adresseConvoiEmetteur $adresseVehiculeEmetteur $nbVoituresRecu $gps

				} \
				$::CON_mnemo_demande_assemblage_reponse {
					#Réponse à une demande d'assemblage
					set nbVehiculesAcceptes [APG_msg_splitstr what $::CON_mnemo_nb_vehicules_convoi]
					set gps [APG_msg_splitstr what $::CMN_mnemogps]
					set adresseConvoiEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseconvoiemetteur]
					set adresseVehiculeEmetteur [APG_msg_splitstr what $::CMN_mnemoadressevehiculeemetteur]
					
					CON_asm_reception_demande_assemblage_reponse $adresseConvoiEmetteur $adresseVehiculeEmetteur $nbVoituresAcceptes $gps
				} \
				$::CON_mnemo_assemblage_termine {
					#Confirmation de terminaison de l'assemblage
					set nbVehiculesAjoutes [APG_msg_splitstr what $::CON_mnemo_nb_vehicules_convoi]
					
					CON_asm_reception_assemblage_termine nbVehiculesAjoutes
				} \
				$::CON_mnemo_separation_convoi {
					#Demande de séparation de convoi
					CON_spt_separation_reception
				} \
				$::CON_mnemo_separation_convoi_confirmee {
					#Séparation de convoi confirmée
					CON_spt_separation_convoi_confirmee
				} \
				$::CON_mnemo_ent_convoi {
					set adresseConvoiEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseconvoiemetteur]
					set adresseVehiculeEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseVehiculeemetteur]
					set GPSPos [APG_msg_splitstr what $::CMN_mnemogps]
					set Sens [APG_msg_splitstr what $::CMN_mnemosens]
					CON_ent_demande_ajout_reception $adresseConvoiEmetteur $adresseVehiculeEmetteur $GPSPos $Sens
				} \
				$::CON_mnemo_ent_convoi_reponse {
					#set adresseConvoiEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseconvoiemetteur]
					#set adresseVehiculeEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseVehiculeemetteur]
					set reponse [APG_msg_splitstr what $::CON_mnemo_entree_convoi_reponse_field]
					#set GPSPos [APG_msg_splitstr what $::CMN_mnemogps]
					#set Sens [APG_msg_splitstr what $::CMN_mnemosens]
					CON_ent_convoi_reponse_reception $reponse
				} \
				$::CON_mnemo_ent_separation_convoi {

					set adresseConvoiDemandeur [APG_msg_splitstr what $::CON_mnemo_ent_adresse_convoi_demandeur]
					set adresseVehiculeDemandeur [APG_msg_splitstr what $::CCON_mnemo_ent_adresse_vehicule_demandeur]

					CON_ent_separation_reception $adresseConvoiDemandeur $adresseVehiculeEmetteur

				} \
				$::CON_mnemo_ent_separation_convoi_confirme {

					set adresseConvoiDemandeur [APG_msg_splitstr what $::CON_mnemo_ent_adresse_convoi_demandeur]
					set adresseVehiculeDemandeur [APG_msg_splitstr what $::CCON_mnemo_ent_adresse_vehicule_demandeur]

					CON_ent_separation_confirme_reception $adresseConvoiDemandeur $adresseVehiculeEmetteur

				} \
				$::CON_mnemo_ent_ajout_possible {

					set adresseConvoiEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseconvoiemetteur]
					set adresseVehiculeEmetteur [APG_msg_splitstr what $::CMN_mnemoadresseVehiculeemetteur]

					CON_ent_ajout_possible_reception $adresseConvoiEmetteur $adresseVehiculeEmetteur

				} \
				$::CON_mnemo_hlg_tick {
					#Met à jour l'adresse du véhicule courant avec le nombre de véhicules en amont
					set nbVehiculesConvoi [APG_msg_splitstr what $::CON_mnemo_nb_vehicules_convoi]
					CON_hlg_reception_tick $nbVehiculesConvoi
				} \
				$::CON_mnemo_hlg_tick_ack {
					# Annule le timer de renvoi de compteur global car une voiture est présente en aval
					CON_hlg_reception_tickACK
				} \
				$::CON_mnemo_hlg_tick_reponse {
					#Met à jour l'adresse du véhicule courant avec le nombre de véhicules en amont
					set nbVehiculesConvoi [APG_msg_splitstr what $::CON_mnemo_nb_vehicules_convoi]
					CON_hlg_reception_tickReponse $nbVehiculesConvoi
				} \
				$::CMN_mnemotypemsg_solitude {
					CON_cmn_declaration_leader
					#sortie de convoi dans le doute <- A faire???
				} \
				$::CMN_mnemotypemsg_convois_voisins {
					set voisins [APG_msg_splitstr what $::CMN_mnemoconvoisvoisins]
					CON_ent_demande_ajout_rte $voisins
				} \
				default {

					APG_vrb_dispwarning "$who>CON | No action for $typeMsg" "APG_receive_whatwho"

				}
}

