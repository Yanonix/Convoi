#!/bin/sh
# the next line restarts using wish \
exec wish "$0" "$@"

#    con
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, Anthony Buisset (v0.1)
#    license type: free of charge license for academic and research purpose
#    see license.txt

# Application dite 'de cone' utilisee pour l'enseignement

### INITIALISATION STANDARD DE L'APPLICATION COMPATIBLE AIRPLUG ###############
# nom standard de l'application (nom du rep. dans la distribution)
# trois lettres majuscules pour APP, trois lettres minuscules pour app
set APP "CON"
set app "con"

# Recuperation de la valeur de la variable d'environnement APG_PATH,
# qui indique le repertoire de la distribution AIRPLUG
# et de la variable APG_LANG qui indique la langue a utiliser.
if { [ catch {
		set APG_PATH $env(APG_PATH)
		set APG_LANG $env(APG_LANG)
    set libapgfile [open $APG_PATH/LIBAPGTK/LIBAPGTK/libapg.tk r]
    close $libapgfile
    
} ] } {
    if { [info exists APG_PATH] == 0 } {
				set APG_PATH "??"
    }
    if { [info exists APG_LANG] == 0 } {
				set APG_LANG "english"
    }
		if { $APG_LANG == "french" } {
				puts stderr "\n\033\[1;31m- $::app\(local\): libapg.tk non trouvee\n \
                         Verifier l'installation. APG_PATH=$APG_PATH\n \
                         Se placer dans le repertoire bin, faire source config.sh\n \
                         Se reporter a la documentation en ligne. Contacter l'equipe Airplug.\
                         \033\[0;00m\n"
		} else {
				puts stderr "\n\033\[1;31m- $::app\(local\): libapg.tk not found\n \
                         Check the installation. APG_PATH=$APG_PATH\n \
                         In the bin directory, type source config.sh\n \
                         See the on-line documentation. Contact the Airplug team.\
                         \033\[0;00m\n"
		}				
    exit
} else {
    source $APG_PATH/LIBAPGTK/LIBAPGTK/libapg.tk
		if { $APG_LANG == "french" } {
				APG_vrb_dispnotif "utilisation de la distribution airplug $APG_PATH"
		} else {

				APG_vrb_dispnotif "using the Airplug distribution $APG_PATH"
		}
}
###############################################################################


	      
### SURCHARGE DE VARIABLES ####################################################
set APP_msgapropos \
"CON v0.39
Application template (read and automatically generate messages).
Used for teaching with application NET.
Bertrand Ducourthial AT utc.fr
Universite de Technologie de Compiegne
Lab. Heudiasyc, UMR CNRS 6599
license type: Free of charge license for academic and research purpose
(see license.txt)"

set APP_msghelp \
"

Usage :
./con.tk | ./con.tk

./con.tk --dest=NET --whatwho --delay=1000 --ident=writter --auto | ./net.tk --whatwho --ident=writter | ./net.tk --whatwho --ident=reader| ./con.tk --ident=reader --whatwho
"
###############################################################################


### LECTURE FICHIERS APPLICATIONS + AFFICHAGE ZONES ###########################
## Lecture des fichiers composant l'application
source $APG_PATH/COMMUN/commun.tk
#source $APG_PATH/SIM/rc-sim.tk
source $APG_PATH/SIM/SIM/sim-rc.tk
#source $APG_PATH/COMMUN/testcanvas.tk
source $PATH/rc-con.tk
source $PATH/con-rc.tk
source $PATH/con-hlg.tk
source $PATH/con-atu.tk
source $PATH/con-adr.tk
source $PATH/con-pos.tk
source $PATH/con-snd.tk
source $PATH/con-rcv.tk
source $PATH/con-svg.tk
source $PATH/con-ent.tk
source $PATH/con-srt.tk
source $PATH/con-asm.tk
source $PATH/con-spt.tk

## Ajout des zones crees, avec option d'affichage
APG_int_addzone adr "Adresses" 1
APG_int_addzone asm "Assemblage" 1
APG_int_addzone pos "Position" 0
APG_int_addzone snd "Emissions" 0
APG_int_addzone rcv "Receptions" 0

## Affichage des zones
APG_int_displayzones
###############################################################################

#-- Procedure CON_start ------------------------------------------------------#
# Action : gere le depart de l'application.                                   #
# Entree : rien                                                               #
# Retour : rien                                                               #
#-----------------------------------------------------------------------------#
proc CON_start { } {

		APG_vrb_dispnotif "Starting CON" "CON_start" 3

		# Activation du bouton Auto du module snd
		.snd.btauto configure -state normal


		# Test d'une demande de depart automatique des emissions periodiques
		# via l'option de la ligne de commande --autosend
		if { $::CON_snd_autosend == true } {
        # demarrage de l'envoi periodique
		    CON_snd_btauto
    	}

		#CON_cmn_init
    	CON_adr_init
		CON_asm_init
		CON_spt_init

}

#-- Procedure CON_stop -------------------------------------------------------#
# Action : gere la fin de l'application.                                      #
# Entree : rien                                                               #
# Retour : rien                                                               #
#-----------------------------------------------------------------------------#
proc CON_stop { } {
		APG_vrb_dispnotif "Stopping CON" "CON_stop" 3
	  # arret d'une eventuelle sauvegarde en cours
		APG_svg_stop

		# fin de l'application
		exit
}
###############################################################################

### INITIALISATION DU DEMARRAGE ################################################
set APG_delay 0

# Abonnement a l'application RTE
APG_begin_lch "RTE"
APG_begin_lch "SIM"

APG_init
